{{#globals}}
{{> global}}
{{/globals}}

{{#variable}}
{{> global}}
{{/variable}}

var jasmine  = require('jasmine-node'),
    env      = jasmine.getEnv();

// TODO: This template shouldn't rely on the _commander variable leaking in
// from JS being eval'd in bin/autodoc!
var reporterType = _commander.verbose ?
  jasmine.TerminalVerboseReporter :
  jasmine.TerminalReporter;

env.addReporter(new reporterType({
  print: process.stdout.write.bind(process.stdout),
  color: true,
  includeStackTrace: true
}));

var failingLines = [];
env.addReporter({
  reportSpecResults: function(spec) {
    if (!spec.results().passed()) {
      failingLines.push(spec.absoluteLine);
    }
  },

  reportRunnerResults: function() {
    if (failingLines.length > 0) {
      console.error('Failures occurred on the following Autodoc-generated tests:');
      for (var i = 0, len = failingLines.length; i < len; ++i) {
        console.error('Line ' + failingLines[i]);
      }
    }
  }
});

{{{exampleHelpers}}}

{{#privateMembers}}
var {{shortName}} = {{{source}}};
{{#methods}}
{{longName}} = {{{source}}};
{{/methods}}
{{/privateMembers}}

{{#namespaces}}
{{#hasExamples}}
describe('{{namespace}}', function() {
  {{#allMembers}}
    {{> examples}}
  {{/allMembers}}
});
{{/hasExamples}}
{{/namespaces}}

env.execute();
