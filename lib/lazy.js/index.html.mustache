<!DOCTYPE HTML>
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  <title>Lazy.js</title>

  <link rel="stylesheet" type="text/css" href="docs/assets/docs.css">

  <script type="text/javascript" src="docs/lib/jasmine.js"></script>
  <script type="text/javascript" src="docs/lib/benchmark.js"></script>
  <script type="text/javascript" src="docs/lib/underscore.js"></script>
  <script type="text/javascript" src="docs/lib/lodash.js"></script>
  <script type="text/javascript" src="docs/lib/jquery.js"></script>
  <script type="text/javascript" src="docs/lib/highcharts.js"></script>
  <script type="text/javascript" src="docs/lib/hightables.js"></script>
  <script type="text/javascript" src="docs/lib/jquery.treetable.js"></script>
  <script type="text/javascript" src="docs/spec_reporter.js"></script>
  <script type="text/javascript" src="docs/dom_example.js"></script>
  <script type="text/javascript" src="docs/boot.js"></script>
  <script type="text/javascript" src="docs/specs.js"></script>

  <!-- source files -->
  <script type="text/javascript" src="lazy.js"></script>
  <script type="text/javascript" src="lazy.dom.js"></script>

  <!-- spec files -->
  <script type="text/javascript" src="spec/support/person.js"></script>
  <script type="text/javascript" src="spec/lazy_spec.js"></script>
  <script type="text/javascript" src="docs/comparisons.js"></script>
</head>

<body>
  <header>
    <h1><a href="index.html">lazy.js</a></h1>
    <a href="https://github.com/dtao/lazy.js" class="github-ribbon"></a>
  </header>

  <nav data-sections=".top-level-section">
    <ul>
      <li class="selected"><a href="#docs">Docs</a></li>
      <li><a href="#dom-example">DOM Example</a></li>
      <li><a href="#benchmark-results">Benchmark Results</a></li>
      <li><a href="#test-results">Spec Results</a></li>
    </ul>
  </nav>

  <section id="docs" class="top-level-section">
    <nav class="subnav">
      <ul>
        <li><a href="#introduction">Introduction</a></li>
        <li><a href="#features">Features</a></li>
        <li><a href="#available-functions">Available functions</a></li>
      </ul>
    </nav>

    {{{readme}}}
  </section>

  <section id="dom-example" class="top-level-section" style="display: none;">
    <div id="dom-event-source">
      <p>
        Move the mouse over this element.<br />
        (See the documentation for an explanation of this section.)
      </p>
    </div>

    <div id="dom-event-output">
      <div class="left"><p></p></div>
      <div class="right"><p></p></div>
    </div>
  </section>

  <section id="benchmark-results" class="top-level-section" style="display: none;">
    <nav class="subnav" data-sections=".benchmark-results-section">
      <ul>
        <li class="selected"><a href="#benchmark-results-10">10 elements</a></li>
        <li><a href="#benchmark-results-100">100 elements</a></li>
        <li><a href="#benchmark-results-other">Other</a></li>
      </ul>
    </nav>

    <form>
      Select the tests you want to run below, choose either
      <label><input id="test-each" type="radio" checked="checked"><code>each</code></input></label> or
      <label><input id="test-to-array" type="radio"><code>toArray</code></input></label>
      <a class="why-to-array-vs-each" href="javascript:void(0);">(why?)</a>, and
      <button class="start-benchmarking">start benchmarking</button>
      to compare Lazy.js, Underscore, and Lo-Dash. For a more comprehensive comparison of several
      more libraries that accomplish similar goals, see the
      <a href="comparisons.html">comparisons</a> page.
    </form>

    <div id="why-to-array-vs-each">
      <p>
        Comparing the performance of Lazy.js to other libraries like Underscore and Lo-Dash is
        unfortunately not black and white. On the one hand, calling <code>toArray</code> on the
        result of a Lazy sequence will give you an actual JavaScript array, which you might need if,
        e.g., you're passing the result to a function from an external library. However, in most
        cases when you use methods like <code>map</code> or <code>filter</code>, you are probably
        just going to do something while iterating over the result. In this case, you don't need an
        array at all; calling <code>each</code> on a <code>Lazy.Sequence</code> will be functionally
        indistinguishable from calling <code>_.each</code> on an array.
      </p>
      <p>
        Generally speaking, Lazy.js performs best (and "wins" more performance races) when you
        <em>don't</em> have to call <code>toArray</code>. However, when chaining methods together
        it's often still the fastest solution regardless.
      </p>
    </div>

    <section id="benchmark-results-10"
      class="benchmark-results-section">

      <div id="benchmark-results-chart-10" class="column-chart"
        data-title="Ops/second - 10 elements"
        data-source="#benchmark-results-table-10"
        data-transpose="true"
        data-row-filter="benchmarkChartRowFilter"
        data-options="benchmarkChartOptions">
      </div>

      <p>
        Select:
        <button class="select-all">All</button>
        <button class="select-none">None</button>
        <button class="clear-selected">Clear</button>
      </p>

      <table id="benchmark-results-table-10" class="benchmark-results-table">
        <tr>
          <th>Test</th>
          <th>Underscore</th>
          <th>Lo-Dash</th>
          <th>Lazy.js</th>
        </tr>
      </table>
    </section>

    <section id="benchmark-results-100"
      class="benchmark-results-section"
      style="display: none;">

      <div id="benchmark-results-chart-100" class="column-chart"
        data-title="Ops/second - 100 elements"
        data-source="#benchmark-results-table-100"
        data-transpose="true"
        data-row-filter="benchmarkChartRowFilter"
        data-options="benchmarkChartOptions">
      </div>

      <p>
        Select:
        <button class="select-all">All</button>
        <button class="select-none">None</button>
        <button class="clear-selected">Clear</button>
      </p>

      <table id="benchmark-results-table-100" class="benchmark-results-table">
        <tr>
          <th>Test</th>
          <th>Underscore</th>
          <th>Lo-Dash</th>
          <th>Lazy.js</th>
        </tr>
      </table>
    </section>

    <section id="benchmark-results-other"
      class="benchmark-results-section"
      style="display: none;">

      <div id="benchmark-results-chart-other" class="column-chart"
        data-title="Ops/second - other"
        data-source="#benchmark-results-table-other"
        data-transpose="true"
        data-row-filter="benchmarkChartRowFilter"
        data-options="benchmarkChartOptions">
      </div>

      <p>
        Select:
        <button class="select-all">All</button>
        <button class="select-none">None</button>
        <button class="clear-selected">Clear</button>
      </p>

      <table id="benchmark-results-table-other" class="benchmark-results-table">
        <tr>
          <th>Test</th>
          <th>Underscore</th>
          <th>Lo-Dash</th>
          <th>Lazy.js</th>
        </tr>
      </table>
    </section>
  </section>

  <section id="test-results" class="top-level-section" style="display: none;">
    <nav class="subnav">
      <ul>
        <li class="selected"><a class="show-all-specs" href="javascript:void(0);">All</a></li>
        <li><a class="show-failing-specs" href="javascript:void(0);">Failures</a></li>
      </ul>
    </nav>

    <table id="test-results-table" class="empty">
      <tr>
        <th>Test</th>
        <th>Success</th>
      </tr>
    </table>
  </section>
</body>

</html>
