<!DOCTYPE html>
<html>

<head>
    <title>{{title}}</title>

    <%= stylesheet_link_tag "docs" %>
    <%= javascript_include_tag "/lib/jasmine/lib/jasmine-core/jasmine" %>
    <%= javascript_include_tag "/lib/lazy.js/lazy" %>

    <script type="text/javascript">
      {{{code}}}
    </script>
</head>

<body>
    <main>
        <header>
            <h1>{{name}}</h1>
            <div class="description">
                {{{description}}}
            </div>
        </header>

        <div class="columns">
            <div class="left-column">
                <nav>
                    <ul>
                        {{#docs}}
                        <li><a href="#{{name}}">{{name}}</a></li>
                        {{/docs}}
                    </ul>
                </nav>
            </div>

            <div class="right-column">
                {{#docs}}
                <section>
                    <h1 id="{{name}}">{{name}}</h1>

                    {{{description}}}

                    {{#hasExamples}}
                    <h2>Specs</h2>
                    <table>
                        <thead>
                            <tr>
                                <th>Input</th>
                                <th>Expected</th>
                                <th>Actual</th>
                            </tr>
                        </thead>

                        <tbody>
                            {{#examples}}
                            <tr id="example-{{id}}">
                                <td>{{{input}}}</td>
                                <td>{{{output}}}</td>
                                <td></td>
                            </tr>
                            {{/examples}}
                        </tbody>
                    </table>
                    {{/hasExamples}}

                    <script type="text/javascript">
                      describe('{{{name}}}', function() {
                        {{#examples}}
                        (function() {
                          var spec = it('returns {{output}} for {{input}}', function() {
                            var result = {{{input}}};
                            expect(result).toEqual({{{output}}});
                          });

                          spec.exampleId = {{id}};
                          spec.input = '{{input}}';
                          spec.output = '{{output}}';
                        }());
                        {{/examples}}
                      });
                    </script>
                </section>
                {{/docs}}
            </div>
        </div>
    </main>

    <script type="text/javascript">
      var jasmineEnv = jasmine.getEnv();

        jasmineEnv.addReporter({
          reportSpecResults: function(spec) {
            var matchingRow = document.getElementById('example-' + spec.exampleId);
            var resultCell = matchingRow.querySelector('td:last-child');

            if (spec.results().passed()) {
                resultCell.textContent = 'Passed';
                return;
            }

            matchingRow.className = 'danger';

            var errorsList = document.createElement('UL');
            resultCell.appendChild(errorsList);

            Lazy(spec.results().getItems())
              .filter(function(item) { return item.passed && !item.passed(); })
              .pluck('message')
              .each(function(errorMessage) {
                var errorListItem = document.createElement('LI');
                errorListItem.textContent = errorMessage;
                errorsList.appendChild(errorListItem);
              });
          }
        });

      jasmineEnv.execute();
    </script>
</body>

</html>
